if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
    MESSAGE (FATAL_ERROR "in-tree build not allowded")
endif(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})

CMAKE_MINIMUM_REQUIRED (VERSION 2.8)
PROJECT (iotkit-embedded-V2.2.1 C)

SET (EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET (LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET (CMAKE_C_FLAGS " -Iexamples -Os -Wall")

IF (WIN32)
    SET (CMAKE_EXE_LINKER_FLAGS "-L${PROJECT_SOURCE_DIR}/prebuilt/win7/libs")
ENDIF (WIN32)

MESSAGE ("---------------------------------------------------------------------")
MESSAGE ("Project Name              : " ${PROJECT_NAME})
MESSAGE ("Source Dir                : " ${PROJECT_SOURCE_DIR})
MESSAGE ("Binary Dir                : " ${PROJECT_BINARY_DIR})
MESSAGE ("System Processor          : " ${CMAKE_SYSTEM_PROCESSOR})
MESSAGE ("System Platform           : " ${CMAKE_SYSTEM})
MESSAGE ("C Compiler                : " ${CMAKE_C_COMPILER})
MESSAGE ("Executable Dir            : " ${EXECUTABLE_OUTPUT_PATH})
MESSAGE ("Library Dir               : " ${LIBRARY_OUTPUT_PATH})
MESSAGE ("SDK Version               : " V2.2.1)
MESSAGE ("")

IF (WIN32)
    MESSAGE ("Building on WINDOWS ...")
ELSE (WIN32)
    MESSAGE ("Building on LINUX ...")
ENDIF (WIN32)
MESSAGE ("---------------------------------------------------------------------")


ADD_DEFINITIONS (-DALCS_ENABLED)
ADD_DEFINITIONS (-DCOAP_OBSERVE_CLIENT_SUPPORTED)
ADD_DEFINITIONS (-DCOAP_OBSERVE_SERVER_SUPPORTED)
ADD_DEFINITIONS (-DCOAP_SERV_MULTITHREAD)
ADD_DEFINITIONS (-DCOAP_USE_PLATFORM_LOG)
ADD_DEFINITIONS (-DCOAP_USE_PLATFORM_MEMORY)
ADD_DEFINITIONS (-DCONFIG_CM_SUPPORT_LOCAL_CONN)
ADD_DEFINITIONS (-DCONFIG_CM_VIA_CLOUD_CONN)
ADD_DEFINITIONS (-DCONFIG_DM_DEVTYPE_SINGLE)
ADD_DEFINITIONS (-DCONFIG_DM_DEVTYPE_SINGLE)
ADD_DEFINITIONS (-DCONFIG_DM_SUPPORT_LOCAL_CONN)
ADD_DEFINITIONS (-DCONFIG_GUIDER_AUTH_TIMEOUT=500)
ADD_DEFINITIONS (-DCONFIG_HTTP_AUTH_TIMEOUT=500)
ADD_DEFINITIONS (-DCONFIG_MID_HTTP_TIMEOUT=500)
ADD_DEFINITIONS (-DDEPRECATED_LINKKIT)
ADD_DEFINITIONS (-DFORCE_SSL_VERIFY)
ADD_DEFINITIONS (-DMQTT_COMM_ENABLED)
ADD_DEFINITIONS (-DMQTT_DIRECT)
ADD_DEFINITIONS (-DOTA_WITH_LINKKIT)
ADD_DEFINITIONS (-DSDK_ENHANCE)
ADD_DEFINITIONS (-DSUPPORT_TLS)
ADD_DEFINITIONS (-DWIFI_AWSS_ENABLED)
ADD_DEFINITIONS (-D_PLATFORM_IS_HOST_)
ADD_DEFINITIONS (-DOTA_RSA_DISABLE)

ADD_SUBDIRECTORY (src/infra/utils)
ADD_SUBDIRECTORY (src/infra/log)
ADD_SUBDIRECTORY (src/infra/system)
ADD_SUBDIRECTORY (src/sdk-impl)
ADD_SUBDIRECTORY (src/protocol/mqtt)
ADD_SUBDIRECTORY (src/protocol/alcs)
ADD_SUBDIRECTORY (src/services/awss)
ADD_SUBDIRECTORY (src/services/linkkit/cm)
ADD_SUBDIRECTORY (src/services/linkkit/dm)

ADD_SUBDIRECTORY (src/ref-impl/hal)
ADD_SUBDIRECTORY (examples)
ADD_SUBDIRECTORY (tests)
ADD_SUBDIRECTORY (src/ref-impl/tls)
ADD_SUBDIRECTORY (src/tools/linkkit_tsl_convert)

ADD_LIBRARY (iot_sdk STATIC
    $<TARGET_OBJECTS:iot_utils>
    $<TARGET_OBJECTS:iot_log>
    $<TARGET_OBJECTS:iot_system>
    $<TARGET_OBJECTS:sdk_impl>
    $<TARGET_OBJECTS:iot_mqtt>
    $<TARGET_OBJECTS:iot_alcs>
    $<TARGET_OBJECTS:awss>
    $<TARGET_OBJECTS:iot_cm>
    $<TARGET_OBJECTS:iot_dm>
)
if(WIN32)
    TARGET_LINK_LIBRARIES (iot_sdk ws2_32)
endif(WIN32)

